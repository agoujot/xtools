{% extends is_sub_request ? 'subrequest.html.twig' : 'editCounter/subtool.html.twig' %}
{% import 'macros/wiki.html.twig' as wiki %}
{% import 'macros/layout.html.twig' as layout %}

{% block downloadLink %}
    {{ layout.downloadLink('EditCounterNamespaceTotals', {project:project.domain, username:user.usernameIdent}, ['wikitext', 'csv'], 'UserApiNamespaceTotals') }}
{% endblock %}

{% block ecBody %}

{% if ec.namespaceTotals|length > 0 %}
	{{ include('editCounter/externallegend.html.twig') }}
    <div class="chart-wrapper namespaces-chart-wrapper toggle-table--chart">
        {##
         # Set the size of the chart to be relative to the number of tools.
         # Otherwise it may get too big and hog up the real estate.
         # 37 is the heigh of one row.
         #}
        {% set maxHeight = min(400, (ec.namespaceTotals|length + 2) * 37) %}
        {% set height = max(150, maxHeight) %}
        <canvas id="namespace-canvas" width="{{ height }}" height="{{ height }}"></canvas>
        <script>
            $(function () {
                window.namespaces = {{ project.namespaces|json_encode()|raw }};
                window.namespaceTotals = {{ ec.namespaceTotals|json_encode()|raw }};
                window.namespaceChart = new Chart($('#namespace-canvas'), {
                    type: 'pie',
                    data: {
                        labels: [{% for key,value in ec.namespaceTotals %}{% if not loop.first %},{% endif %}"{{ nsName(key, project.namespaces) }}"{% endfor %}],
                        datasets: [{
                            data: [{% for value in ec.namespaceTotals %}{% if not loop.first %},{% endif %}{{ value }}{% endfor %}],
                            backgroundColor: [{% for key,value in ec.namespaceTotals %}{% if not loop.first %},{% endif %}'{{ color(key) }}'{% set first = 0 %}{% endfor %}],
                            borderColor: [{% for key,value in ec.namespaceTotals %}{% if not loop.first %},{% endif %}'{{ color(key) }}'{% set first = 0 %}{% endfor %}],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: false,
                        aspectRatio: 1,
                        legend: {
                            display: false
                        },
                        tooltips: {
                            callbacks: {
                                label: function (tooltip, chartData) {
                                    var value = chartData.datasets[tooltip.datasetIndex].data[tooltip.index],
                                        total = chartData.datasets[0].data.reduce(function (accumulator, currentValue) {
                                            return accumulator + currentValue;
                                        }, 0),
                                        percentage = (value / total).toLocaleString(i18nLang, {style: 'percent'});

                                    return value.toLocaleString(i18nLang) + ' (' + percentage + ')';
                                },
                                title: function (tooltip, chartData) {
                                    return chartData.labels[tooltip[0].index];
                                }
                            }
                        }
                    }
                });
            });
        </script>
    </div>
{% else %}
    <div class="alert alert-info">
        {{ msg('no-contribs') }}
    </div>
{% endif %}

{% endblock %}
