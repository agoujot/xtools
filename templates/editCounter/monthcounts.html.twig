{% extends is_sub_request ? 'subrequest.html.twig' : 'editCounter/subtool.html.twig' %}
{% import 'macros/wiki.html.twig' as wiki %}
{% import 'macros/layout.html.twig' as layout %}

{% block downloadLink %}
    {{ layout.downloadLink('EditCounterMonthCounts', {project:project.domain, username:user.usernameIdent}, ['wikitext', 'csv'], 'UserApiMonthCounts') }}
{% endblock %}

{% block ecBody %}

{% if not project.userHasOptedIn(user) %}
    {{ wiki.userOptedOut(project, user) }}
{% elseif ec.monthCounts.monthLabels|length > 0 %}
    <table class="sr-only">
        <thead>
            <tr>
                <th>{{ msg('month') }}</th>
                <th>{{ msg('count') }}</th>
                {% for ns in ec.monthCounts.totals|keys %}
                    <th>{{ nsName(ns, project.namespaces) }}</th>
                {% endfor %}
            </tr>
        </thead>
        <tbody>
            {% for month,counts in ec.monthCountsWithNamespaces %}
                <tr>
                    <td>{{ month }}</td>
                    <td>{{ counts|reduce((carry, v) => carry + v)|num_format }}</td>
                    {% for _ns,count in counts %}
                        <td>{{ count|num_format }}</td>
                    {% endfor %}
                </tr>
            {% endfor %}
        </tbody>
    </table>

    {# Set height of chart based on how many months (horizontal rows) and namespaces are being reported. #}
    <div style="position:relative; height:{% if is_sub_request %}{{ (25 * ec.monthCounts.monthLabels|length) + 30 }}px{% else %}{{ 25 * ( ec.monthCounts.monthLabels|length + ( (ec.monthCounts.totals|keys|length / 3)|round(1, "ceil") ) ) }}px{% endif %}">
        <canvas id="monthcounts-canvas"></canvas>
    </div>

    <script type="text/javascript">
        $(function() {
            /** @type {Array} The labels for the y-axis. */
            var labels = {{ ec.monthCounts.monthLabels|json_encode|raw }};

            /** @type {Number} Max value of the year totals */
            var maxTotal = {{ max(ec.monthCounts.totals|map(x => max(x))) }};

            /** @type {Array} To be passed into Chart.js */
            var datasets = [
            // Format data for use in charts.
            {% for nsId,namespaceData in ec.monthCounts.totals %}
                {
                    label: "{{ nsName(nsId, project.namespaces) }}",
                    backgroundColor: "{{ color(nsId) }}",
                    data: Object.values({{ namespaceData|json_encode()|raw }}),
                },
            {% endfor %}
            ];

            var showLegend = {% if is_sub_request %}false{% else %}true{% endif %};
            xtools.editcounter.setupMonthYearChart('month', datasets, labels, maxTotal, showLegend);
        });
    </script>
{% else %}
    <div class="alert alert-info">
        {{ msg('no-contribs') }}
    </div>
{% endif %}

{% endblock %}
